{"version":3,"sources":["App.tsx","default.text.tsx","reportWebVitals.ts","index.tsx"],"names":["marked","require","setOptions","gfm","breaks","App","props","state","text","onChange","bind","e","this","setState","target","value","className","id","rows","dangerouslySetInnerHTML","__html","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAGMA,EAASC,EAAQ,IAKvBD,EAAOE,WAAW,CAEhBC,KAAK,EACLC,QAAQ,I,IA0CKC,E,kDArCb,WAAYC,GAAW,IAAD,8BACpB,cAAMA,IAFRC,MAAiB,CAACC,KCfN,0pCDkBV,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAFI,E,4CAItB,SAASC,GACPC,KAAKC,SAAS,CACZL,KAAMG,EAAEG,OAAOC,U,oBAInB,WACE,OACI,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,cAAf,oBAGA,qBAAKA,UAAU,YAAf,SACE,0BAAUA,UAAU,YAAYC,GAAG,SAASC,KAAM,GAAKT,SAAUG,KAAKH,SAAtE,SAAiFG,KAAKL,MAAMC,YAI9F,sBAAKQ,UAAU,oBAAf,UACE,qBAAKA,UAAU,cAAf,uBAGA,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,gBAAgBC,GAAG,UAAUE,wBAAyB,CAACC,OAAQpB,EAAOY,KAAKL,MAAMC,qB,GA7B9Fa,IAAMC,WEATC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e89d6d2d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport defaultText from './default.text'\nconst marked = require(\"marked\")\ntype MyState = {\n  text: string\n}\n\nmarked.setOptions({\n\n  gfm: true,\n  breaks: true\n});\n\nclass App extends React.Component<any, MyState>{\n  state: MyState = {text: defaultText}\n  constructor(props:any){\n    super(props)\n    this.onChange = this.onChange.bind(this)\n  }\n  onChange(e:any){\n    this.setState({\n      text: e.target.value\n    })\n\n  }\n  render(){\n    return (\n        <div className=\"container\">\n          <div className=\"card editor-wrap\">\n            <div className=\"card-header\">\n              Editor\n            </div>\n            <div className=\"card-body\">\n              <textarea className=\"card-body\" id=\"editor\" rows={10}  onChange={this.onChange}>{this.state.text}</textarea>\n            </div>\n          </div>\n\n            <div className=\"card preview-wrap\">\n              <div className=\"card-header\">\n                Previewer\n              </div>\n              <div className=\"card-body textarea-wrap\">\n                <div className=\"markdown-body\" id=\"preview\" dangerouslySetInnerHTML={{__html: marked(this.state.text)}} />\n              </div>\n          </div>\n\n    </div>\n    );\n  }\n\n}\n\nexport default App;\n","export default `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}